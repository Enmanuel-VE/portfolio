---
interface Props {
  title: string;
  image: string;
  description: string;
  stackTech: { icon: string; name: string; url: string }[];
  demo: string;
  repository: string;
}

const { title, image, description, stackTech, demo, repository } = Astro.props;

const links = [
  { title: 'Ver demo', label: 'Demo', href: demo },
  { title: 'Ver repositorio', label: 'Repositorio', href: repository },
] as const;
---

<article
  class="group project-card flex flex-row overflow-hidden rounded-xl border border-gray-500/40 bg-white dark:border-rose-500/40 dark:bg-[rgb(25,0,35)] dark:text-white"
>
  <div class="info-card flex flex-1 flex-col gap-4 p-4">
    <header class="flex flex-1 flex-col gap-1">
      <h3 title={title} class="font-bold group-hover:underline md:text-lg xl:text-xl">
        <a href={demo} target="_blank" rel="noopener noreferrer">
          {title}
        </a>
      </h3>
      <p class="text-sm text-black/75 dark:text-white/75">
        {description}
      </p>
    </header>

    <ul class="flex w-fit flex-row items-center gap-4 px-2 text-sm">
      {
        stackTech.map((tech) => (
          <li>
            <a
              title={tech.name}
              class="flex cursor-pointer flex-col items-center justify-center"
              target="_blank"
              rel="noopener noreferrer"
              href={tech.url}
              aria-label={tech.name}
            >
              <img class="h-5 w-5 group-hover:saturate-150" src={tech.icon} alt={tech.name} />
              <p>{tech.name}</p>
            </a>
          </li>
        ))
      }
    </ul>

    <div class="flex flex-row flex-wrap items-center gap-2">
      {
        links.map(({ title, label, href }) => (
          <a
            title={title}
            target="_blank"
            rel="noopener noreferrer"
            href={href}
            class="transform cursor-pointer rounded-xl border border-gray-500/40 px-3 py-1 transition-transform duration-150 ease-in-out hover:scale-105 hover:border-rose-500 active:scale-90 dark:border-rose-500/40"
          >
            {label}
          </a>
        ))
      }
    </div>
  </div>

  <div class="image-card relative overflow-hidden sm:w-[35%]">
    <a
      class="absolute inset-0 z-3 h-full w-full opacity-0 hover:cursor-pointer"
      title="Ver proyecto"
      href={demo}
      target="_blank"
      aria-hidden="true"
      role="presentation"
      rel="noopener noreferrer"></a>
    <div
      class="filter-overlay absolute z-2 h-full w-full dark:bg-[rgba(25,0,35,0.35)] dark:group-hover:bg-[rgba(25,0,35,0.25)]"
    >
    </div>
    <div
      class="gradient-overlay-list pointer-events-none absolute inset-0 z-1 bg-linear-to-r dark:from-[rgb(25,0,35)]"
    >
    </div>

    <img
      class="h-full w-full scale-105 object-cover opacity-70 transition-all duration-300 ease-out group-hover:scale-110 group-hover:opacity-100"
      src={image}
      alt="example"
      loading="lazy"
    />
  </div>
</article>

<style>
  @keyframes reveal {
    from {
      opacity: 0;
      transform: translateY(25px) scale(0.9);
    }
    to {
      opacity: 1;
      transform: translateY(0px) scale(1);
    }
  }

  .project-card {
    animation-name: reveal;
    animation-timing-function: linear;
    animation-fill-mode: both;
    animation-timeline: view();
    animation-range: entry 0% cover 25%;
  }

  .card-grid-mode {
    flex-direction: column-reverse;
  }

  .card-grid-mode .image-card {
    width: 100%;
    height: 40%;
  }

  .card-grid-mode .info-card {
    width: 100%;
    flex: 1;
  }

  .card-grid-mode .gradient-overlay-list {
    opacity: 0;
  }

  .card-row-mode .image-card {
    display: flex;
  }

  @media (width <= 40rem) {
    .card-row-mode .image-card {
      display: none;
    }

    .card-row-mode .info-card {
      width: 100%;
    }
  }
</style>
